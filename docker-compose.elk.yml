version: '3.7'

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    container_name: es01
    restart: 'unless-stopped'
    environment:
      - node.name=es01
      - cluster.name=es_cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es01:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl http://localhost:9200 | grep 'You Know, for Search'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana-oss:7.10.2
    restart: 'unless-stopped'
    volumes:
      - ./kibana:/usr/share/kibana/data
    ports:
      - '5601:5601'
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS="http://es01:9200"
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:7.10.2
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/logs # PM2 로그 파일 경로를 컨테이너 내부로 마운트
    ports:
      - '9600:9600' # Logstash HTTP API
    depends_on:
      - es01

  # logstash:
  #   image: docker.elastic.co/logstash/logstash-oss:7.10.2
  #   environment:
  #     - xpack.monitoring.enabled=false
  #     - xpack.monitoring.elasticsearch.hosts=["http://es01:9200"]
  #     - http.host=0.0.0.0
  #     - http.port=9600
  #     - path.data=/usr/share/logstash/data
  #   volumes:
  #     - ./logstash/config:/usr/share/logstash/config
  #     - ./logstash/pipeline:/usr/share/logstash/pipeline
  #   ports:
  #     - 9600:9600
  #   depends_on:
  #     - es01
